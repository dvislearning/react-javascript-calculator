{"version":3,"sources":["calc-logic.js","App.js","serviceWorker.js","index.js"],"names":["operators","firstEntry","inputDisplay","length","afterOperator","includes","processInput","input","test","zeroAfterOperator","push","pop","i","validZero","validDecimal","validOperator","operations","+","a","b","-","*","/","calculateExpression","expression","parseFloat","evalExpression","string","expArray","split","total","step","groupTotal","localStep","inputs","id","className","key","CalcButtons","props","console","log","buttons","map","button","react_default","createElement","onClick","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","display","handleEvent","bind","assertThisInitialized","handlePress","handleClick","userInput","processedDisplay","currentDisplay","Calc","endOfDisplay","join","setState","event","pressTarget","filter","target","clickTarget","document","getElementById","addEventListener","removeEventListener","App_CalcButtons","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.eae69a67.chunk.js","sourcesContent":["const operators = [\"+\",\"-\",\"*\",\"/\"];\n\nfunction firstEntry(inputDisplay) {\n    return (inputDisplay.length === 1 && inputDisplay[0] === \"0\");\n};\n\nfunction afterOperator(inputDisplay) {\n    return (operators.includes(inputDisplay[inputDisplay.length-1]));\n}\n\nfunction zeroAfterOperator(inputDisplay) {\n    return (operators.includes(inputDisplay[inputDisplay.length-2]) && inputDisplay[inputDisplay.length-1] === \"0\")\n}\n\nfunction validOperator(inputDisplay) {\n    return (!(inputDisplay[inputDisplay.length-1] === \".\") && !(afterOperator(inputDisplay)));\n}\n\n// Checks if number contains leading zeros\nfunction validZero(inputDisplay) {\n    if(firstEntry(inputDisplay)) {\n        return false;\n    }\n\n    for(let i = inputDisplay.length -1; i >= 0; i--) {\n        if(operators.includes(inputDisplay[i])) {\n            if(inputDisplay[i+1] && inputDisplay[i+1] === \"0\" && !inputDisplay[i+2]) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n\n// Checks if key press is valid\nexport function processInput(input, inputDisplay) {    \n    if(/[123456789]/.test(input)) {\n        if(firstEntry(inputDisplay)) {\n            inputDisplay[0] = input;\n        }\n        else if (zeroAfterOperator(inputDisplay)) {\n            inputDisplay.pop();\n            inputDisplay.push(input);\n        }\n        else {\n            inputDisplay.push(input);\n        }\n    } else if(input === \"0\") {\n        if(validZero(inputDisplay)) {\n            inputDisplay.push(input);\n        }\n    } else if (input === \".\") {\n        if(validDecimal(inputDisplay)) {\n            if(afterOperator(inputDisplay)) {\n                inputDisplay.push(\"0\");\n            }\n            inputDisplay.push(input);\n        }\n    } else if (operators.includes(input)) {\n        if (validOperator(inputDisplay)) {\n            inputDisplay.push(input);\n        }\n        else if(afterOperator(inputDisplay)) {\n            inputDisplay.pop();\n            inputDisplay.push(input);\n        }\n    }\n    return inputDisplay;\n}\n\n// Checks if number contains more than 1 decimal.\nfunction validDecimal(inputDisplay) {\n    for(let i = inputDisplay.length -1; i >= 0; i--) {\n        if (inputDisplay[i] === \".\") {\n            return false;\n        }\n        else if(operators.includes(inputDisplay[i])) {\n            break;\n        }\n    };\n    return true; \n}\n\nconst operations = {\n    '+': (a,b) => {return a+b},\n    '-': (a,b) => {return a-b},\n    '*': (a,b) => {return a*b},\n    '/': (a,b) => {return a/b}\n}\n\nfunction calculateExpression(expression) {\n    return operations[expression[1]](parseFloat(expression[0]), parseFloat(expression[2]))\n}\n\nexport function processEquals(inputDisplay) {\n    let endOfDisplay = inputDisplay[inputDisplay.length-1]\n    if(operators.includes(endOfDisplay) || endOfDisplay === \".\") {\n        inputDisplay.pop();\n    }\n    return inputDisplay;\n}\n\nexport function evalExpression(string) {\n    let expArray = string.split(/(\\+|-|\\*|\\/)/g)\n    let total = 0;\n    if(expArray.length === 3) {\n        return calculateExpression(expArray);\n    }\n    else {\n        let step = 1;\n        total = expArray[0]\n        while (step < expArray.length) {\n            if(['*','/'].includes(expArray[step])) {\n                total = calculateExpression([total,expArray[step],expArray[step+1]]);\n                step += 2;\n            }\n            else if(['+','-'].includes(expArray[step])) {\n                if(['+','-'].includes(expArray[step+2]) || !expArray[step+2]) {\n                    total = calculateExpression([total,expArray[step],expArray[step+1]]);\n                    step += 2;\n                }\n                else if(['*','/'].includes(expArray[step+2])) {\n                    let groupTotal = expArray[step+1];\n                    let localStep = step;\n                    while(expArray[localStep+2] && ['*','/'].includes(expArray[localStep+2])) {\n                        groupTotal = calculateExpression([groupTotal,expArray[localStep + 2],expArray[localStep+3]])\n                        localStep += 2\n                    }\n                    total = calculateExpression([total,expArray[step],groupTotal]);\n                    step = localStep + 2;\n                }\n            }\n        }\n        return total;\n    }\n}","import React, { Component } from 'react';\nimport './App.css';\nimport './calc-logic.js';\nimport * as Calc from './calc-logic.js';\n\n\nconst inputs = [\n  {\"id\":\"one\", \"className\":\"button\", \"key\":\"1\"},\n  {\"id\":\"two\", \"className\":\"button\", \"key\":\"2\"},\n  {\"id\":\"three\", \"className\":\"button\", \"key\":\"3\"},\n  {\"id\":\"divide\", \"className\":\"button\", \"key\":\"/\"},\n  {\"id\":\"four\", \"className\":\"button\", \"key\":\"4\"},\n  {\"id\":\"five\", \"className\":\"button\", \"key\":\"5\"},\n  {\"id\":\"six\", \"className\":\"button\", \"key\":\"6\"},\n  {\"id\":\"multiply\", \"className\":\"button\", \"key\":\"*\"},\n  {\"id\":\"seven\", \"className\":\"button\", \"key\":\"7\"},\n  {\"id\":\"eight\", \"className\":\"button\", \"key\":\"8\"},\n  {\"id\":\"nine\", \"className\":\"button\", \"key\":\"9\"},\n  {\"id\":\"subtract\", \"className\":\"button\", \"key\":\"-\"},\n  {\"id\":\"zero\", \"className\":\"button\", \"key\":\"0\"},\n  {\"id\":\"decimal\", \"className\":\"button\", \"key\":\".\"},\n  {\"id\":\"equals\", \"className\":\"button\", \"key\":\"=\"},\n  {\"id\":\"add\", \"className\":\"button\", \"key\":\"+\"},\n  {\"id\":\"clear\", \"className\":\"button\", \"key\":\"Escape\"}\n];\n\nconst CalcButtons = (props) => {\n  console.log(props)\n  const buttons = inputs.map(function(button) {\n    return <button \n              className={button.className} \n              id={button.id} \n              key={button.key} \n              onClick={props.onClick}>\n                {button.key === \"Escape\" ? \"AC\" : button.key}\n          </button>\n  });\n  \n  return (\n    <div id=\"calc-inputs\">\n        {buttons}\n    </div>\n  );\n}\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state={\n      display: [\"0\"]\n    }\n\n    this.handleEvent = this.handleEvent.bind(this);\n    this.handlePress = this.handlePress.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleEvent(userInput) {\n    let currentDisplay = this.state.display;\n    let processedDisplay;\n\n    if(userInput.id === \"clear\") {\n      processedDisplay = [\"0\"];\n    }\n    else if(userInput.id === \"equals\") {\n      let verifiedEqualsRequest = Calc.processEquals(currentDisplay).join('');\n      processedDisplay = [Calc.evalExpression(verifiedEqualsRequest)];\n    }\n    else {\n      processedDisplay = Calc.processInput(userInput.key, currentDisplay);\n    }\n\n    this.setState({\n      display: processedDisplay\n    }) \n  }\n\n  handlePress(event) {\n    let pressTarget = inputs.filter(input => input.key === event.key);\n    if(pressTarget.length){ \n      this.handleEvent(pressTarget[0]);\n    }\n  }\n\n  handleClick(event) {\n    if(event.target.className === \"button\"){\n      const clickTarget = inputs.filter((input) => input.id === event.target.id)[0];\n      this.handleEvent(clickTarget);\n    }\n  }\n\n  componentDidMount() {\n    document.getElementById('calc-inputs').addEventListener('keydown', this.handlePress);\n  }\n\n  componentWillUnMmount() {\n    document.getElementById('calc-inputs').removeEventListener('keydown', this.handlePress);\n  }\n\n  render() {\n    return (\n      <div id=\"App\">\n        <div id=\"calculator\">\n          <div id=\"calc-header\">\n            <span id=\"header-text\">\n              Calculator by D.V.\n            </span>\n          </div>\n  \n          <div id=\"display\">\n            <div id=\"display-text\"> \n              {this.state.display.join('')}\n            </div>\n          </div>\n  \n          <div id=\"calc-bottom\">\n            <CalcButtons onClick={this.handleClick} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}